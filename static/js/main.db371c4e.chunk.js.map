{"version":3,"sources":["Widget/Chat.js","Widget/Chatbutton.js","Widget/index.js","App.js","index.js"],"names":["Chat","props","bot","messages","MessageCard","sender","className","message","src","url","alt","Wrapper","class","name","width","height","cx","cy","r","fill","profile","type","onClick","closeMessage","map","ele","onSubmit","event","value","preventDefault","target","setMessages","placeholder","xmlns","viewBox","d","href","styled","div","Chatbutton","Notification","amount","state","setstate","Index","useState","isnotification","notificationCount","chat","setChat","App","BotMsg","a","fetch","then","response","json","data","Widget","style","backgroundColor","newmessages","f","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db371c4e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { EmojiHappyIcon, XIcon } from '@heroicons/react/solid'\r\n\r\nimport styled from 'styled-components'\r\n\r\n\r\nfunction Chat(props) {\r\n    // props\r\n    const bot = props.bot\r\n    const messages = props.messages ? props.messages : []\r\n\r\n    // sender & bot message card\r\n    const MessageCard = (props) => {\r\n        return props.sender ? <div className=\" sender  flex  mr-1  mb-4 items-end justify-end\">\r\n            <div className=\"flex flex-col space-y-2 text-xs sm:text-s max-w-xs  mx-2 items-start\">\r\n                <div><p className=\"px-4 py-2 rounded-lg inline-block bg-gray-300 text-gray-600\">{props.message}</p></div>\r\n            </div>\r\n            <img src={props.url} alt=\"My profile\" className=\"w-6 h-6 rounded-full \" />\r\n        </div>\r\n\r\n            : <div className=\"bot  flex  mb-4 items-end mb-4 \">\r\n                <img src={props.url} alt=\"My profile\" className=\"w-6 h-6 rounded-full \" />\r\n                <div className=\"flex flex-col space-y-2 text-xs sm:text-s max-w-xs  mx-2 items-start\">\r\n                    <div><p className=\"px-4 py-2 rounded-lg   bg-gray-300 text-gray-600\">{props.message}</p></div>\r\n                </div>\r\n            </div>\r\n    }\r\n\r\n    // Input Message Submit Handler\r\n    const submitHandler = (value) => {\r\n        if (value) {\r\n            props.setMessages([{ message: value, url: \"https://picsum.photos/200/300\", sender: true }, ...messages], value)\r\n            value = null\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Wrapper className=\"chat  flex flex-col flex-1 h-full  bg-gray-100\">\r\n            {/*  Bot Profile and Cancel Button  */}\r\n            <div class=\"flex sm:items-center justify-between p-3  border-b-2 border-gray-200\">\r\n                <div class=\"flex items-center space-x-4\">\r\n                    <img src={bot.url} alt=\"\" class=\"w-10 h-10 sm:w-12 sm:h-12 rounded-full\" />\r\n                    <div class=\"flex flex-col  leading-tight\">\r\n                        <div class=\"text-xl sm:text-2xl mt-1 flex items-center\">\r\n                            <span class=\"text-gray-700 mr-3\">{bot.name}</span>\r\n                            <span class=\"text-green-500\">\r\n                                <svg width=\"10\" height=\"10\">\r\n                                    <circle cx=\"5\" cy=\"5\" r=\"5\" fill=\"currentColor\"></circle>\r\n                                </svg>\r\n                            </span>\r\n                        </div>\r\n                        <span class=\"text-base text-gray-600\">{bot.profile}</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"flex items-center space-x-2\">\r\n                    <button type=\"button\" class=\"inline-flex items-center mr-2 justify-center rounded-full h-10 w-10 transition duration-500 ease-in-out text-gray-500 hover:bg-gray-300 focus:outline-none\" onClick={() => {\r\n                        props.closeMessage()\r\n                    }}>\r\n                        <XIcon className=\"p-1\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {/* message container  */}\r\n            <div className=\"chat-message overflow-y-scroll overflow-x-hidden  pl-2 flex flex-col-reverse   flex-grow \">\r\n                {messages.map((ele) => {\r\n                    return <MessageCard url={ele.url} message={ele.message} sender={ele.sender} />\r\n                })}\r\n            </div>\r\n\r\n\r\n\r\n\r\n            {/* message form */}\r\n            <form className=\"flex-shrink border-t-4 border-gray-200  p-3 \" onSubmit={(event) => { event.preventDefault(); submitHandler(event.target[1].value); event.target[1].value = \"\" }}>\r\n                <div className=\"relative flex\">\r\n                    <span className=\"absolute inset-y-0 flex items-center\">\r\n                        <button type=\"button\" className=\"inline-flex items-center justify-center rounded-full h-10 w-10 transition duration-500 ease-in-out text-gray-500 hover:bg-gray-300 focus:outline-none\">\r\n                            <EmojiHappyIcon className=\"outline h-6 w-6 text-gray-500\" />\r\n                        </button>\r\n                    </span>\r\n                    <input type=\"text\" placeholder=\"Write Something\" className=\"w-full focus:outline-none focus:placeholder-gray-400 text-gray-600 placeholder-gray-600 pl-12 bg-gray-200 rounded-full py-2 sm:py-3\" />\r\n                    <div className=\"absolute right-0 items-center inset-y-0  sm:flex\">\r\n                        <button type=\"submit\" className=\"inline-flex items-center justify-center rounded-full h-10 w-10 sm:h-12 sm:w-12 transition duration-500 ease-in-out text-white bg-indigo-500 hover:bg-indigo-400 focus:outline-none\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"h-5 w-5 sm:h-6 sm:w-6 transform rotate-90\">\r\n                                <path d=\"M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z\"></path>\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex pt-1 justify-end\">\r\n                    <a href=\"https://github.com/swasthikshetty10\" className=\"text-gray-400  text-xs\"> by Swasthik shetty</a>\r\n                </div>\r\n            </form>\r\n        </Wrapper>\r\n\r\n    )\r\n}\r\n//  Scroll Bar style\r\nexport default Chat\r\nconst Wrapper = styled.div`\r\n     .chat-message::-webkit-scrollbar {\r\n    width: 0.12rem;\r\n  }\r\n   \r\n  .chat-message::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.2);\r\n  }\r\n   \r\n  .chat-message::-webkit-scrollbar-thumb {\r\n    background-color: rgb(79,70,229);\r\n    outline: 1px solid rgb(79,70,229);\r\n  }\r\n  \r\n`","import React, { useState } from 'react'\r\nimport { AnnotationIcon } from '@heroicons/react/solid'\r\nfunction Chatbutton(props) {\r\n\r\n    // Message Count Display \r\n    const Notification = ({ amount, state }) => {\r\n        return state ? <div className=\"bg-red-500 text-white  rounded-full p-0.5 text-xs \"> <p>{amount}</p></div> : <></>\r\n    }\r\n\r\n    return (\r\n        <div className=\"cursor-pointer  h-8 w-8 sm:h-10 sm:w-10 rounded-md hover:bg-indigo-700 bg-indigo-500 text-white relative \">\r\n            <AnnotationIcon />\r\n            <div className=\"absolute -top-2 -right-1 \"><Notification amount={props.amount} state={props.setstate} /></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Chatbutton\r\n","import React, { useState } from 'react'\r\nimport Chat from \"./Chat\"\r\nimport Chatbutton from \"./Chatbutton\"\r\nfunction Index(props) {\r\n    // States\r\n    const [isnotification, setNotification] = useState(true)\r\n    const [notificationCount, setNotificationCount] = useState(1)\r\n    const [chat, setChat] = useState(false)\r\n    const closeMessage = () => { setChat(!chat) }\r\n\r\n    return (\r\n        <div>\r\n            {/* Chat Body */}\r\n            <div className={chat ? \"block \" : \"hidden\"}>\r\n                <div {...props}>\r\n                    <Chat closeMessage={closeMessage} bot={props.bot} setMessages={props.setMessages} messages={props.messages} />\r\n                </div>\r\n            </div>\r\n            {/* Chat Icon */}\r\n            <div className={!chat ? \"\" : \"hidden\" + \" bottom-1 right-1\"} onClick={() => { setChat(!chat) }}>\r\n                <Chatbutton setstate={isnotification} amount={notificationCount} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import React, { useState } from 'react';\nimport Widget from \"./Widget\"\nfunction App() {\n  const bot = { name: \"EPAX\", url: \"https://cdn.discordapp.com/avatars/630686815736692746/89a1377032b7030586ba964485ca23fc.webp?size=1024\", profile: \"Swasthik's Assistant\" }\n  const [messages, setMessages] = useState([])\n  const handleMessages = (newmessages, newmassage = null) => {\n    const f = [...newmessages]\n    setMessages(newmessages)\n\n    BotMsg(f)\n  }\n\n  const BotMsg = async (messages) => {\n\n    fetch('https://geek-jokes.sameerkumar.website/api')\n      .then(response => response.json())\n      .then(data => { setMessages([{ message: data, url: bot.url }, ...messages]) });\n  }\n\n  return (\n    <div className=\"h-screen bg-gray-200 relative\">\n      <div className=\" absolute flex bottom-2 right-2 sm:bottom-6 sm:right-6\">\n\n        <Widget className=\"bottom-0\"\n          style={{ height: '80vh', width: \"370px\", backgroundColor: \"red\" }}\n          bot={bot}\n          setMessages={handleMessages}\n          messages={messages}\n\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}